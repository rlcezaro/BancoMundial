// <auto-generated />
using System;
using BancoMundial.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BancoMundial.Migrations
{
    [DbContext(typeof(BancoMundialContext))]
    partial class BancoMundialContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BancoMundial.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClienteType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasDiscriminator<string>("ClienteType").HasValue("Cliente");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BancoMundial.Models.ContaBancaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Agencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContaType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("NumeroConta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxaSaque")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TitularId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TitularId");

                    b.ToTable("Contas");

                    b.HasDiscriminator<string>("ContaType").HasValue("ContaBancaria");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BancoMundial.Models.PessoaFisica", b =>
                {
                    b.HasBaseType("BancoMundial.Models.Cliente");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("FaixaEtaria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PessoaJuridicaId")
                        .HasColumnType("int");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Renda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("PessoaJuridicaId");

                    b.HasDiscriminator().HasValue("PessoaFisica");
                });

            modelBuilder.Entity("BancoMundial.Models.PessoaJuridica", b =>
                {
                    b.HasBaseType("BancoMundial.Models.Cliente");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Faturamento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("InscricaoEstadual")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Clientes", t =>
                        {
                            t.Property("Idade")
                                .HasColumnName("PessoaJuridica_Idade");
                        });

                    b.HasDiscriminator().HasValue("PessoaJuridica");
                });

            modelBuilder.Entity("BancoMundial.Models.ContaCorrente", b =>
                {
                    b.HasBaseType("BancoMundial.Models.ContaBancaria");

                    b.Property<decimal>("Limite")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxaJuros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("ContaCorrente");
                });

            modelBuilder.Entity("BancoMundial.Models.ContaPoupanca", b =>
                {
                    b.HasBaseType("BancoMundial.Models.ContaBancaria");

                    b.HasDiscriminator().HasValue("ContaPoupanca");
                });

            modelBuilder.Entity("BancoMundial.Models.ContaSalario", b =>
                {
                    b.HasBaseType("BancoMundial.Models.ContaBancaria");

                    b.HasDiscriminator().HasValue("ContaSalario");
                });

            modelBuilder.Entity("BancoMundial.Models.ContaBancaria", b =>
                {
                    b.HasOne("BancoMundial.Models.Cliente", "Titular")
                        .WithMany()
                        .HasForeignKey("TitularId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Titular");
                });

            modelBuilder.Entity("BancoMundial.Models.PessoaFisica", b =>
                {
                    b.HasOne("BancoMundial.Models.PessoaJuridica", null)
                        .WithMany("Socios")
                        .HasForeignKey("PessoaJuridicaId");
                });

            modelBuilder.Entity("BancoMundial.Models.PessoaJuridica", b =>
                {
                    b.Navigation("Socios");
                });
#pragma warning restore 612, 618
        }
    }
}
